#include<stdio.h>

void quickSort(int *a,int len)
{
	int i,j,key,flag;
	
	i=0;
	j=len-1;
	key=a[0];
	flag=1;//flag=1的时候比较后面的数
	while(i<j){
		if(flag){
			if(key<a[j]){
				j--;
			}else{
				a[i]=a[i]+a[j];
				a[j]=a[i]-a[j];
				a[i]=a[i]-a[j];
				flag=0;
			}
		}else{
			if(key>a[i]){
				i++;
			}else{
				a[i]=a[i]+a[j];
				a[j]=a[i]-a[j];
				a[i]=a[i]-a[j];
				flag=1;
			}
		}
	}
	
	i=0;
	while(key!=a[i]){
		i++;
	}
	
	if(i>1){
		quickSort(a,i+1);
	}
	if(i<len-2){
		quickSort(&a[i+1],len-i-1);
	}
}

void printArray(int *a,int len)
{
	int i;
	for(i=0;i<len;i++){
		printf("%d ",a[i]);
	}
	printf("\n");
}

void quickSort1(int *a,int start,int end)
{
	if(start>=end){
		return ;
	}
	
	int low=start;
	int high=end;
	int key=a[low];
	
	while(low<high){
		while(low<high && a[high]>key){
			high--;
		}
		a[low]=a[high];
		while(low<high && a[low]<key){
			low++;
		}
		a[high]=a[low];
	}
	a[low]=key;
	quickSort1(a,start,low-1);
	quickSort1(a,low+1,end);
}

int main()
{
	int a[]={3,4,5,2,1};
	int len=sizeof(a)/sizeof(a[0]);
	quickSort1(a,0,len-1);
	printArray(a,len);
	
	return 0;
}
